server.port=9000
spring.application.name=gateway

# Nacos注册中心
spring.cloud.nacos.discovery.server-addr=localhost:8848
spring.cloud.nacos.discovery.namespace=et2301

# Gateway 订单服务
spring.cloud.gateway.routes[0].id=order-service
spring.cloud.gateway.routes[0].uri=lb://order-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/order-system/**
spring.cloud.gateway.routes[0].predicates[1]=Method=GET,POST
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

# Gateway 库存服务
spring.cloud.gateway.routes[1].id=storage-service
spring.cloud.gateway.routes[1].uri=lb://storage-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/storage-system/**
spring.cloud.gateway.routes[1].predicates[1]=Method=GET,POST
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

### Sentinel
## 控制台直接加载服务
spring.cloud.sentinel.eager=true
## 链路限流必须关闭web context
spring.cloud.sentinel.web-context-unify=false
## 控制台地址
spring.cloud.sentinel.transport.dashboard=localhost:9999
## 数据源 nacos
spring.cloud.sentinel.datasource.et.nacos.server-addr=${spring.cloud.nacos.discovery.server-addr}
spring.cloud.sentinel.datasource.et.nacos.namespace=${spring.cloud.nacos.discovery.namespace}
# 网关限流gw_flow
spring.cloud.sentinel.datasource.et.nacos.rule-type=gw_flow
# Data ID
spring.cloud.sentinel.datasource.et.nacos.data-id=gateway-sentinel-gw-flow
# Data ID的格式
spring.cloud.sentinel.datasource.et.nacos.data-type=json


